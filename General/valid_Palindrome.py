
from Helpers import helper as hlp
from Helpers import test_class

class Solution(test_class.test_class):

    def setUp(self):
        super().setUp()

    def validPalindrome(self, s: str) -> bool:
        isValid = self.isPalindrome(s, True)
        if not isValid:
            isValid = self.isPalindrome(s, False)

        return isValid

    def isPalindrome(self, s, skipRight):
        i = 0
        j = len(s) - 1
        charRemoved = False
        while i < j:
            if s[i] == s[j]:
                j -= 1
                i += 1
            elif skipRight and not charRemoved and s[i] == s[j - 1]:  # abbca
                j -= 2
                i += 1
                charRemoved = True
            elif not charRemoved and s[i + 1] == s[j]:  # acbba
                j -= 1
                i += 2
                charRemoved = True
            else:
                return False
        return True

    # without removing chars
    def isPalindrome2(self, s):
        if len(s) <= 1:
            return True
        else:
            return s[0] == s[-1] and self.isPalindrome2(s[1:-1])

    def test_1(self):
        self.assertEqual(True, self.validPalindrome("abba"))

    def test_2(self):
        self.assertEqual(True, self.validPalindrome("abbca"))

    def test_3(self):
        self.assertEqual(False, self.validPalindrome("eeccccbebaeeabebccceea"))

    def test_4(self):
        self.assertEqual(True, self.validPalindrome("aguokepatgbnvfqmgmlcupuufxoohdfpgjdmysgvhmvffcnqxjjxqncffvmhvgsymdjgpfdhooxfuupuculmgmqfvnbgtapekouga"))

    def test_5(self):
        self.assertEqual(True, self.validPalindrome("ebcbbececabbacecbbcbe"))

    def test_20(self):
        self.assertEqual(False, self.validPalindrome("ipjiabbborwutgpnvarhbhjflnfztggysbomzpesulanxwtmahpitzxrscmyjyatyflapdkcsjmmvuvpkrevsxlcrkbqnrqcmwltqjbewlmmslzcgrusgfthllruivocaaoiuyqduwyqkcsoohanzxryudthnblqidmvnqlqnurqdliebsezgdlzskhxzzvenxwmjokyunloqagyoklswajycvdijniolcpvslvemumzzzdgzwzfskkztjxmfyltznajikmdebspxvxcxvigpzvwipajgtxdkztaitgukitljtwjsuhdjbtkqmtvpguqoxxndvwuzyjhntlopuwbnbpxymbfnpnurgfgwnhlplzpnnpqdbpygrhswpqyaffwazvkuxlvhtuaaxgcshnmsexjmofonbzbmeshcjjzwtemequcjcmtswahgzkktgnvlsyrxoqwsenclwckwkmtrkmxgkfdgvimyejtitcugynhymonndswxgjlcimyrnlpzxpdbmzqfjhjyikrejjlwnxvksoiucyvjtuzptxwvxdssudxxmwmrgbocdhqbdssbbanwmnflqedgtzjqobgofvxeiwbggadbgudvsdatarbzjxtccraqxemsxfzqlwqislkbuneoymhqhrzhczhteqauvcaacmynrxfmrndgdudjcwdcirujjutsiunfjumgxfjgbpegellqwcwbraekfaxvrpveswjrhuinqgmujnorstfvptoceghvafewlhaujmonvvtmthibbotzcuqhfladmdrtbfsrnrjkilqxqoyjziwijuozdklzbrijkdvxkgcshbylqkbeqrwrigiyyvfeiaqwavqxyvhzbescjqpqjaqaqypwhztukkbdwgojdqiqlvygxvioubygirwmlfrqgylohfuodcvfpaqruiwzcglvrqmtwebxorngbscaxdfxguxhfzkikumxscrhlsbczsfptsatmdlxjziosjvxmlnrysfgsyouzrsxddseoncqpmwerajhkzxvxucxlltllrplhbehpmjxpkoghqxwcfdvwuwogidkedwpilwpaqetypuzarvnrupqtxxrzjscdvkawcgezftvusddqhwszadragxqpgwhhugvykxytgmtsivuxfyjuslgqkbnpvtgpqyiimpzfwfkcdssskbmfehigeqxdzprylbnnjlawjwpaxnfanufzhpcuzotfayrnheqppddirlsdjxrgujtoobmiwdylfbfzdcqygjpsupepqmcmvyuohyqywaszwiiabfdjngklkcwiwtdhkvwlpdmilrjvzemfxpvfzavejxgultgulvigqmxfsecojlpzghmookwxwytsxuadbpkdfjuzicharfhnytysuriecrwvdnguhzapktlzxcfhuacclgdcbkdrorfylzeybsdmqiymwjvpsxxegeegcfkrnlvmhgvenoxnprsswshskjwazrocohpliayyagaygmdlrxaomgvarzdavayurbrktoxblvntzscehdyyzcdbjhlrqjlyteqcfuqoihdwvegobzpqxdwcuoezglbrtlofjnedqfjnoraglzxfghbxaieavytzirsdscilscsbocfdthbdsflsflqibkmtapvaukoqbmodlgewcrqmjdzecllqmgpnfindnaevogrpbzzyrbdrvqlpgtlnrmrwhfkrqrayrlbqcfojjpydogiryxmxjkljbyrxsfikmkfvxyyaoygzxiswgaodxlebnncwuywsqphrxqcioxdfjmkzpfjytroajttdlaegdsvnwfemagxcysnqdjoeagfvgdvuwonxynaahdqegykcwgevzrfiwgvizmadhodejgppegcjwrwxvoszfbfmpigqwyedebsylpicvvvjvqnkwtfdycslvjhoxqhmvfzwdgnfksaoaanhackimdjxjyyxpuyierdlwcgxxzxqnfexqjwuxbbgbzndrcgvzrdocoahclawkhvxitexpyybrsxaulpvumygggyxollkadoaucnqnmygsyqjxjagdtqjrmgfsgofocxgijekwovcyecqpghtezymqidgrmlzzkozxpgnxfoczemsfqltmpgqbmsokwdsqbhifdojrvkraoysmaxsnetkiqiduvnqkhmxlnvjwchiolixwzyiziunzudacfyfbovnxhfkzedkfmwpuxgaqhortuooducaujqhgoqnhiptxvayizefjivkphqbsngwaijczssrftvilmcbnotvibznbjzojgaopljdfcmpuaeaasnpduilohcgfocjljijwqallfcftebxssxtkcgcltvjhzsgfczillatgyzeoydazmagbrupzajkuhfgcetgwqenajijtoxnffkyxqruyuxywehdtyrtivbrgnmvasfwtpzfhzsnoclknqkhwklepciijaoykvivmidchplymzbeyyltmsnddymvieoydsqzypnmsdyzgcuujzqqtgxybhsliselfamhnemjmkiufsnqevdtjgggakeygnpypbbjvdayqppajprhsfbehdjtahrwlxkqvqsimbvcbwuyrjksbnkteaoqhdzkaimkteoxitalzvzjrdeenrtbtrbppjjajqnzuizvdgmlgxsbyjwzxfsqagutkfbzkzezdfnjlgxrlvpymbpdgzbneglootnpnclrgnkcmtsaivetdnkfkkowgmsbvvrrfdscxmzybygaphvzpocjpbkouydoszcingtkreqgmjudvjgjhaylurngmemamzumzvhxnoqzvmmdipocgzacelrdodpbfpupzwffbqzjwcmieydvdkvgiashklljmnijdlchtxmofuhvzkihzlroveuqparrbmlgazfzonvmvojffuzhlzthmbzzsqetkbwfeyphmsetjeoaktjrmmyuexrlyezvsxmxgmntnlwtqsqfiacwkdjmltmgrkxoijawdypkegrulxpbpiknovpswibodsuqavszcttkchdsobwvfngqxzpidqwvlwzafswiattvwnniboldikuxwzvmfmqlpnydfjyvipmudkqmbrlmthyddnbkyazqrydxmbtvvooluumrrfbtkqqhunitsmndoikcvtijzurhfprdjlclnnfvwkovbbbzyrcbszlgrjswhvuqwevhlrspsoypxdocxjigwaotioazvsnpaebvantycbpntvtzfzyjxupumdxnzqxxeavdloumekxqzxlabdkdqhydtzbpjcszkppjvaaotjtyhnffibvdzdugupuqcqcjudporpyqykbllbjgtunewqoeuqdufwjbpgiroqsgotrkqxwayrucfzetmzbzazwdfmebnrelkxyfwbifzajgxodbwryzyxacgtmsmvdqmvghyrtbpohysqpmzoxnldneajwrkzzbemrttgqslyqloonosogakddsopvrneksguqnzkxwcmtbncninwczyuqexhfcpvqhogrbaaoanpabknwfdjfttuphlpeqmqghmtwhillyhxeckxleyfvjvwhalffdgdhjqqtonbvlxqywcmxeolaaxxgmkdixrkyrhiltsdpzqddkirshtmcvdifizzgnyxfckxegiowtawgstkljnjxbtgdisekpkaotioditojivkupiipomnrkytnoiirvszjbdcovbmfpymagauofnrqltszswiykkokrixfenqznfbrdxsipvqxyqpnhlwtusnvbbyizqzlwthzkmclnkndlcgeqjohzfrtuxxfkdjdeyawiresqkbkhwqsyajiphhnvqjromrvetbdhqbrojdnoqcachzmnnozmjvrglpbqedxwcvwfnupnvmgnkylkuuyrvkhfwrylwbvutekovgqsnhqzveqjtgfpnmytkmwfjcjncrcazmbkegmzesfexozjrjirmfszfciraxsilnxydjbemkdapxzagzbqeufubzcikcvrrqjgtsiqtvczgegwlugfjljjqnobcyyysdfpsdgplirugwobatiwstojbtsmhdxlljpgbbawerlxpzsupgzybyffjrlxogahvtyhigtpcmexvgbxryymmpwmmkndxzuuirxuuduvqpbaywnqqjqhxeoxaltncwswgeidmdfcxrfrycwfqklfjaucuuazmddgaggeeeacscupeqvuiaeembweabwfvkumfpebchagzlqvgzzwgbeztxvvicoquffsiuhbfupneikkekmklgxrrweyaahzzukuauctcevrsxvxpxaswwrkespnhfqoqtxxlicppldbtilqzhsvgzwqhogggeogovlaclygljdwxoalmebnacmyxxwhytnvydlhaqgelhvblomycggcttfsgpcwiihpnpskocxoqhqddnqttsdqredayysxsxhntxlnaolfnklpjgttxssmekttsktqhqbkpyhmmribrvamxmhvensenhorpktppydgvlvzkhysvtbylyfjvioqydtanyidhqyasfxvvhribyzcmndlcdlwaktnlzkzlfhcnvhhfnoqivdcasvgnxorequzonywuhrvzwlwdpvgafgbwyhwqtogjgnupmrgxeokkpxuddsbdtjymcycnosmwoqonlzsbwzwmlqyrwzcneuywvwiaoclzrzyvacngjuuzkmsxubkcjunyanmwegplprwtrgqkfgwjuflzywglyewunsudzjbjcuonevldylbaibrbfbhctdconoohpmvwmeozbgcjqzmsqdltgovzuhyxnvrhbldabjooigfzealnrutqikeisljdozhjzmnrwdqqdldpsltgtcjmlhuirzinefgvyvtyldclwuwrqsngtwjzuvsjitjovqsxgmwwcaetefbxowgultdlgxccbtrzmtqkpyvqipcrrkuukrrcpiqvypkqtmzrtbccxgldtlugwoxbfeteacwwmgxsqvojtijsvuzjwtgnsqrwuwlcdlytvyvgfenizriuhlmjctgtlspdldqqdwrnmzjhzodjlsiekiqturnlaezfgioojbadlbhrvnxyhuzvogtldqsmzqjcgbzoemwvmphoonocdtchbfbrbiablydlvenoucjbjzdusnuweylgwyzlfujwgfkqgrtwrplpgewmnaynujckbuxsmkzuujgncavyzrzlcoaiwvwyuenczwryqlmwzwbszlnoqowmsoncycmyjtdbsdduxpkkoexgrmpungjgotqwhywbgfagvpdwlwzvrhuwynozuqeroxngvsacdviqonfhhvnchflzkzlntkawldcldnmczybirhvvxfsayqhdiynatdyqoivjfylybtvsyhkzvlvgdypptkprohnesnevhmxmavrbirmmhypkbqhqtksttkemssxttgjplknfloanlxtnhxsxsyyaderqdsttqnddqhqoxcokspnphiiwcpgsfttcggcymolbvhlegqahldyvntyhwxxymcanbelaoxwdjlgylcalvogoegggohqwzgvshzqlitbdlppcilxxtqoqfhnpsekrwwsaxpxvxsrvectcuukuzzhaayewrrxglkmkekkienpufbhuisffuqocivvxtzebgwzzgvqlzgahcbepfmukvfwbaewbmeeaiuvqepucscaeeeggagddmzauucuajflkqfwcyrfrxcfdmdiegwswcntlaxoexhqjqqnwyabpqvuduuxriuuzxdnkmmwpmmyyrxbgvxemcptgihytvhagoxlrjffybyzgpuszpxlrewabbgpjllxdhmstbjotswitabowgurilpgdspfdsyyycbonqjjljfgulwgegzcvtqistgjqrrvckiczbufueqbzgazxpadkmebjdyxnlisxaricfzsfmrijrjzoxefsezmgekbmzacrcnjcjfwmktymnpfgtjqevzqhnsqgvoketuvbwlyrwfhkvryuuklykngmvnpunfwvcwxdeqbplgrvjmzonnmzhcacqondjorbqhdbtevrmorjqvnhhpijaysqwhkbkqseriwayedjdkfxxutrfzhojqegcldnknlcmkzhtwlzqziybbvnsutwlhnpqyxqvpisxdrbfnzqnefxirkokkyiwszstlqrnfouagamypfmbvocdbjzsvriiontykrnmopiipukvijotidoitoakpkesidgtbxjnjlktsgwatwoigexkcfxyngzzifidvcmthsrikddqzpdstlihrykrxidkmgxxaaloexmcwyqxlvbnotqqjhdgdfflahwvjvfyelxkcexhyllihwtmhgqmqeplhputtfjdfwnkbapnaoaabrgohqvpcfhxequyzcwnincnbtmcwxkznqugskenrvposddkagosonoolqylsqgttrmebzzkrwjaendlnxozmpqsyhopbtryhgvmqdvmsmtgcaxyzyrwbdoxgjazfibwfyxklernbemfdwzazbzmtezfcuryawxqkrtogsqorigpbjwfudqueoqwenutgjbllbkyqypropdujcqcqupugudzdvbiffnhytjtoaavjppkzscjpbztdyhqdkdbalxzqxkemuoldvaexxqznxdmupuxjyzfztvtnpbcytnavbeapnsvzaoitoawgijxcodxpyospsrlhvewquvhwsjrglzsbcryzbbbvokwvfnnlcljdrpfhruzjitvckiodnmstinuhqqktbfrrmuuloovvtbmxdyrqzaykbnddyhtmlrbmqkdumpivyjfdynplqmfmvzwxukidlobinnwvttaiwsfazwlvwqdipzxqgnfvwbosdhckttczsvaqusdobiwspvonkipbpxlurgekpydwajioxkrgmtlmjdkwcaifqsqtwlntnmgxmxsvzeylrxeuymmrjtkaoejtesmhpyefwbkteqszzbmhtzlhzuffjovmvnozfzaglmbrrapquevorlzhikzvhufomxthcldjinmjllkhsaigvkdvdyeimcwjzqbffwzpupfbpdodrlecazgcopidmmvzqonxhvzmuzmamemgnrulyahjgjvdujmgqerktgniczsodyuokbpjcopzvhpagybyzmxcsdfrrvvbsmgwokkfkndteviastmckngrlcnpntoolgenbzgdpbmypvlrxgljnfdzezkzbfktugaqsfxzwjybsxglmgdvziuznqjajjppbrtbtrneedrjzvzlatixoetkmiakzdhqoaetknbskjryuwbcvbmisqvqkxlwrhatjdhebfshrpjappqyadvjbbpypngyekagggjtdveqnsfuikmjmenhmaflesilshbyxgtqqzjuucgzydsmnpyzqsdyoeivmyddnsmtlyyebzmylphcdimvivkyoajiicpelkwhkqnklconszhfzptwfsavmngrbvitrytdhewyxuyurqxykffnxotjijaneqwgtecgfhukjazpurbgamzadyoezygtallizcfgszhjvtlcgcktxssxbetfcfllaqwjijljcofgcholiudpnsaaeaupmcfdjlpoagjozjbnzbivtonbcmlivtfrsszcjiawgnsbqhpkvijfeziyavxtpihnqoghqjuacudooutrohqagxupwmfkdezkfhxnvobfyfcaduznuiziyzwxiloihcwjvnlxmhkqnvudiqiktensxamsyoarkvrjodfihbqsdwkosmbqgpmtlqfsmezcofxngpxzokzzlmrgdiqmyzethgpqceycvowkejigxcofogsfgmrjqtdgajxjqysgymnqncuaodaklloxygggymuvpluaxsrbyypxetixvhkwalchaocodrzvgcrdnzbgbbxuwjqxefnqxzxxgcwldreiyupxyyjxjdmikcahnaaoaskfngdwzfvmhqxohjvlscydftwknqvjvvvciplysbedeywqgipmfbfzsovxwrwjcgeppgjedohdamzivgwifrzvegwckygeqdhaanyxnowuvdgvfgaeojdqnsycxgamefwnvsdgealdttjaortyjfpzkmjfdxoicqxrhpqswyuwcnnbelxdoagwsixzgyoayyxvfkmkifsxrybjlkjxmxyrigodypjjofcqblryarqrkfhwrmrnltgplqvrdbryzzbprgoveandnifnpgmqllcezdjmqrcwegldombqokuavpatmkbiqlfslfsdbhtdfcobscslicsdsriztyvaeiaxbhgfxzlgaronjfqdenjfoltrblgzeoucwdxqpzbogevwdhioqufcqetyljqrlhjbdczyydhecsztnvlbxotkrbruyavadzravgmoaxrldmgyagayyailphocorzawjkshswssrpnxonevghmvlnrkfcgeegexxspvjwmyiqmdsbyezlyfrordkbcdglccauhfcxzltkpazhugndvwrceirusytynhfrahcizujfdkpbdauxstywxwkoomhgzpljocesfxmqgivlugtlugxjevazfvpxfmezvjrlimdplwvkhdtwiwcklkgnjdfbaiiwzsawyqyhouyvmcmqpepuspjgyqcdzfbflydwimbootjugrxjdslriddppqehnryaftozucphzfunafnxapwjwaljnnblyrpzdxqegihefmbksssdckfwfzpmiiyqpgtvpnbkqglsujyfxuvistmgtyxkyvguhhwgpqxgardazswhqddsuvtfzegcwakvdcsjzrxxtqpurnvrazupyteqapwlipwdekdigowuwvdfcwxqhgokpxjmphebhlprlltllxcuxvxzkhjarewmpqcnoesddxsrzuoysgfsyrnlmxvjsoizjxldmtastpfszcbslhrcsxmukikzfhxugxfdxacsbgnroxbewtmqrvlgczwiurqapfvcdoufholygqrflmwrigybuoivxgyvlqiqdjogwdbkkutzhwpyqaqajqpqjcsebzhvyxqvawqaiefvyyigirwrqebkqlybhscgkxvdkjirbzlkdzoujiwizjyoqxqlikjrnrsfbtrdmdalfhqucztobbihtmtvvnomjuahlwefavhgecotpvftsronjumgqniuhrjwsevprvxafkearbwcwqllegepbgjfxgmujfnuistujjuricdwcjdudgdnrmfxrnymcaacvuaqethzchzrhqhmyoenubklsiqwlqzfxsmexqarcctxjzbratadsvdugbdaggbwiexvfogboqjztgdeqlfnmwnabbssdbqhdcobgrmwmxxdussdxvwxtpzutjvycuioskvxnwljjerkiyjhjfqzmbdpxzplnrymicljgxwsdnnomyhnyguctitjeymivgdfkgxmkrtmkwkcwlcneswqoxryslvngtkkzghawstmcjcuqemetwzjjchsembzbnofomjxesmnhscgxaauthvlxukvzawffayqpwshrgypbdqpnnpzlplhnwgfgrunpnfbmyxpbnbwupoltnhjyzuwvdnxxoqugpvtmqktbjdhusjwtjltikugtiatzkdxtgjapiwvzpgivxcxvxpsbedmkijanztlyfmxjtzkksfzwzgdzzzmumevlsvpcloinjidvcyjawslkoygaqolnuykojmwxnevzzxhkszldgzesbeildqrunqlqnvmdiqlbnhtduyrxznahoosckqywudqyuioaacoviurllhtfgsurgczlsmmlwebjqtlwmcqrnqbkrclxsverkpvuvmmjsckdpalfytayjymcsrxztiphamtwxnalusepzmobsyggtzfnlfjhbhravnpgtuwrobbbaijpi"))
